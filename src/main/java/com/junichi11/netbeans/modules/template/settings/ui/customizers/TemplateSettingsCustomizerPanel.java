/*
 * The MIT License
 *
 * Copyright 2015 junichi11.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package com.junichi11.netbeans.modules.template.settings.ui.customizers;

/**
 *
 * @author junichi11
 */
public class TemplateSettingsCustomizerPanel extends javax.swing.JPanel {

    private static final long serialVersionUID = 4444747316722998838L;

    /**
     * Creates new form TemplateSettingsCustomizerPanel
     */
    public TemplateSettingsCustomizerPanel() {
        initComponents();
    }

    public boolean isSettingsEnabled() {
        return enableCheckBox.isSelected();
    }

    public void setSettingsEnabled(boolean isEnabled) {
        enableCheckBox.setSelected(isEnabled);
    }

    public void setSettings(String settings) {
        settingsEditorPane.setText(settings);
    }

    public String getSettings() {
        return settingsEditorPane.getText();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        enableCheckBox = new javax.swing.JCheckBox();
        settingsScrollPane = new javax.swing.JScrollPane();
        settingsEditorPane = new javax.swing.JEditorPane();

        org.openide.awt.Mnemonics.setLocalizedText(enableCheckBox, org.openide.util.NbBundle.getMessage(TemplateSettingsCustomizerPanel.class, "TemplateSettingsCustomizerPanel.enableCheckBox.text")); // NOI18N

        settingsEditorPane.setContentType("text/x-properties"); // NOI18N
        settingsScrollPane.setViewportView(settingsEditorPane);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(settingsScrollPane)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(enableCheckBox)
                        .addGap(0, 219, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(enableCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(settingsScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox enableCheckBox;
    private javax.swing.JEditorPane settingsEditorPane;
    private javax.swing.JScrollPane settingsScrollPane;
    // End of variables declaration//GEN-END:variables
}
